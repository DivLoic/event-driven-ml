image: loicmdivad/edml-cicd-base:0.1.1-SNAPSHOT

variables:
  PIP_CACHE_DIR: out/.pip
  VENV_HOME: out/.venv
  MAVEN_REPO: out/.m2
  MAVEN_OPTS: "-Dmaven.repo.local=${MAVEN_REPO}/repository"
  MAVEN_CONFIG: "-s ${MAVEN_REPO}/settings.xml"

before_script:
  - mkdir -p ${MAVEN_REPO} ${VENV_HOME} ${PIP_CACHE_DIR}
  - envsubst < settings.template.xml > ${MAVEN_REPO}/settings.xml

stages:
  - test
  - package
  - deploy-app/train
  - deploy-model

cache:
  key: EDML_CACHING_KEY
  paths:
    - ${VENV_HOME}/
    - ${MAVEN_REPO}/
    - ${PIP_CACHE_DIR}/
  policy: pull-push

.on-demand: &on-demand
  except:
    variables:
      - $TRAIN_VERSION
      - $DEPLOY_PATH
      - $DEPLOY_VERSION

test:
  stage: test
  <<: *on-demand
  script:
    - ./mvnw -B test

package:
  stage: package
  <<: *on-demand
  script:
    - ./mvnw -B package jib:build -DskipTests
    - gsutil cp ./edml-serving/target/edml-serving*.jar gs://edml/maven/edml-serving/
    - gsutil cp ./edml-scoring/target/edml-scoring*.jar gs://edml/maven/edml-scoring/
    - gsutil cp ./edml-trainer/target/dist/edml_trainer*.whl gs://edml/pypi/edml-trainer/

.training: &training
  script:
    - export PROJECT_VERSION=$(eval $PROJECT_VERSION_CMD)
    - export PY_PROJECT_VERSION=$(eval $PY_PROJECT_VERSION_CMD)
    - echo "Prepare Job submition with artifact ${PY_PROJECT_VERSION}"
    - mkdir -p ./out && cd ./out
    - gsutil -m cp gs://edml/pypi/edml-trainer/edml_trainer*${PY_PROJECT_VERSION}*.whl .
    - unzip edml_trainer*
    - gcloud ai-platform jobs list --sort-by=created --limit=10
    - ./ai-platform-submit.sh ${PROJECT_VERSION}
    - export-model-version edml-trainer ${PROJECT_VERSION} >> ../.training-output.sh
    - export-model-path edml-trainer ${PROJECT_VERSION} >> ../.training-output.sh
  artifacts:
    name: "$CI_BUILD_NAME-artifacts-$CI_JOB_ID"
    paths:
      - .training-output.sh
    expire_in: 10 week

train:
  stage: deploy-app/train
  <<: *on-demand
  variables:
    PROJECT_VERSION_CMD: 'maven-eval \$${edml.revision}'
    PY_PROJECT_VERSION_CMD: 'echo $$PROJECT_VERSION | tr "-" "_"'
  <<: *training
  timeout: 48h

on-demand-model-training:
  stage: deploy-app/train
  only:
    variables:
      - $TRAIN_VERSION
  variables:
    PROJECT_VERSION_CMD: 'echo $$TRAIN_VERSION'
    PY_PROJECT_VERSION_CMD: 'echo $$PROJECT_VERSION | tr "-" "_"'
  <<: *training
  timeout: 48h

deploy-model:
  stage: deploy-model
  when: manual
  only:
    - trunk
  except:
    variables:
      - $DEPLOY_PATH
      - $DEPLOY_VERSION
  script:
    - source .training-output.sh
    - edml
  dependencies:
    - train
    - on-demand-model-training
  allow_failure: false

on-demand-model-deployement:
  stage: deploy-model
  when: manual
  only:
    variables:
      - $DEPLOY_PATH
      - $DEPLOY_VERSION
  script:
    - MODEL_VERSION=${DEPLOY_VERSION} MODEL_PATH=${DEPLOY_PATH}/ edml
  allow_failure: false

deploy-app:
  stage: deploy-app/train
  <<: *on-demand
  when: manual
  only:
    - trunk
  script:
    - echo "I'm deploying now"
