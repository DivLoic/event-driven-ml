image: loicmdivad/edml-cicd-base:0.1.1

variables:
  MAVEN_HOME: ${HOME}/.m2

before_script:
  - echo $HOME
  - echo $MAVEN_HOME
  - apt-get install -y gettext-base
  - mkdir -p ${MAVEN_HOME}
  - envsubst < settings.template.xml > ${MAVEN_HOME}/settings.xml

stages:
  - test
  - package
  - deploy-app/train
  - deploy-model

cache: &maven_cache
  key: ${CI_PROJECT_NAME}
  paths:
    - ${MAVEN_HOME}
  policy: pull-push

.manual_submission: &manual_submission
  except:
    variables:
      - $TRAIN_VERSION

#.prepare_build: &prepare_build
#  before_script:
#    - cat ./build/version.properties
#    - export PROJECT_VERSION=$(cat ./build/version.properties | grep -i display | awk -F= '{print $2}')
#    - export PY_PROJECT_VERSION=$(echo $PROJECT_VERSION | tr "-" "_")

#version:
#  stage: version
#  <<: *manual_submission
#  cache:
#    <<: *maven_cache
#  script:
#    - ./gradlew versionFile
#    - cat ./build/version.properties
#  artifacts:
#    name: "$CI_BUILD_NAME-artifacts-$CI_JOB_ID"
#    paths:
#      - build/
#    expire_in: 1 week

test:
  stage: test
  <<: *manual_submission
  cache:
    <<: *maven_cache
  script:
    - ./mvnw test -s ${MAVEN_HOME}/settings.xml

package:
  stage: package
  <<: *manual_submission
  cache:
    <<: *maven_cache
  script:
    - ./mvnw package jib:build -DskipTests -s ${MAVEN_HOME}/settings.xml
    - gsutil cp ./edml-serving/target/edml-serving*.jar gs://edml/maven/edml-serving/
    - gsutil cp ./edml-scoring/target/edml-scoring*.jar gs://edml/maven/edml-scoring/
    - gsutil cp ./edml-trainer/target/dist/python-build/edml_trainer*.whl gs://edml/pypi/edml-trainer/

train:
  stage: deploy-app/train
  <<: *manual_submission
  cache:
    <<: *maven_cache
  before_script:
    - export PROJECT_VERSION=$(./maven-eval.sh $${edml.revision})
    - export PY_PROJECT_VERSION=$(echo $PROJECT_VERSION | tr "-" "_")
  script:
    - echo "Prepare Job submition with artifact ${PY_PROJECT_VERSION}"
    - mkdir ./out && mv ./edml-trainer/build/python-build/edml_trainer*${PY_PROJECT_VERSION}*.whl ./out
    - cd ./out && unzip edml_trainer*
    - gcloud ai-platform jobs list
    - scripts/ai-platform-submit.sh ${PROJECT_VERSION}
  dependencies:
    - package
  artifacts:
    name: "$CI_BUILD_NAME-artifacts-$CI_JOB_ID"
    paths:
      - build/
    expire_in: 3 week

on-demand-train:
  stage: deploy-app/train
  only:
    variables:
      - $TRAIN_VERSION
  cache:
    <<: *maven_cache
  script:
    - echo "Prepare Job submition with artifact ${TRAIN_VERSION}"
    - export PY_TRAIN_VERSION=$(echo $TRAIN_VERSION | tr "-" "_")
    - mkdir out && gsutil -m cp gs://edml/pypi/edml-trainer/edml_trainer-${PY_TRAIN_VERSION}-py3-none-any.whl ./out
    - cd ./out && unzip edml_trainer*
    - gcloud ai-platform jobs list
    - mkdir -p ${CI_PROJECT_DIR}/build/
    - scripts/ai-platform-submit.sh ${TRAIN_VERSION}
  dependencies:
    - package
  artifacts:
    name: "$CI_BUILD_NAME-artifacts-$CI_JOB_ID"
    paths:
      - build/
    expire_in: 3 week

deploy-model:
  when: manual
  only:
    - trunk
  stage: deploy-model
  script:
    - export BUCKET=$(cat ./build/version.properties | grep -i model_path | awk -F= '{print $2}')
    - export VERSION=$(cat ./build/version.properties | grep -i model_version | awk -F= '{print $2}')
    - export EXPORT=$(gsutil ls ${BUCKET}/model/export/exporter/ | sort | tail -1)
    - MODEL_VERSION=${VERSION} MODEL_PATH=${EXPORT}/ /app/bin/edml-cicd-base
  dependencies:
    - train
    - on-demand-train
  allow_failure: false

deploy-app:
  stage: deploy-app/train
  <<: *manual_submission
  cache:
    <<: *maven_cache
  when: manual
  only:
    - trunk
  script:
    - echo "I'm deploying now"
